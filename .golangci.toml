[run]
timeout = "10m"

[linters-settings.goconst]
min-len = 5
min-occurrences = 5

checks = [
  "all",
]

[linters-settings.exhaustive]
default-signifies-exhaustive = true

[linters-settings.revive]
confidence = 3

[linters-settings.errcheck]
exclude-functions = [
  "(*os.File).Close",
  "(*compress/gzip.Writer).Close",
  "(*compress/gzip.Reader).Close",
  "(*archive/tar.Writer).Close",
  "(*dagger.io/dagger.Client).Close",
]

[linters]
disable-all = true
enable = [
  "bodyclose",
  "dogsled",
  "errcheck",
  "gochecknoinits",
  "goconst",
  "gocritic",
  "goimports",
  "goprintffuncname",
  "gosec",
  "gosimple",
  "govet",
  "ineffassign",
  "misspell",
  "nakedret",
  "exportloopref",
  "staticcheck",
  "stylecheck",
  "typecheck",
  "unconvert",
  "unused",
  "whitespace",
  "gocyclo",
  "exhaustive",
  "typecheck",
  "asciicheck",
  "errorlint",
  "revive",
]

# Disabled linters (might want them later)
# "unparam"

[issues]
exclude-use-default = false

# Enable when appropriate
# Poorly chosen identifier
[[issues.exclude-rules]]
linters = ["stylecheck"]
text = "ST1003"

# Enable when appropriate
# Dot imports that aren't in external test packages are discouraged.
[[issues.exclude-rules]]
linters = ["stylecheck"]
text = "ST1001"

# Enable when appropriate
# strings.Title has been deprecated since Go 1.18 and an alternative has been available since Go 1.0: The rule Title uses for word boundaries does not handle Unicode punctuation properly.
# Use golang.org/x/text/cases instead.
[[issues.exclude-rules]]
linters = ["staticcheck"]
text = "SA1019: strings.Title"

# ExitCode is deprecated with 0.7.x
[[issues.exclude-rules]]
linters = ["staticcheck"]
text = "SA1019: container"
[[issues.exclude-rules]]
linters = ["staticcheck"]
path = "ci/"
text = "SA1019"

[[issues.exclude-rules]]
linters = ["staticcheck"]
text = "use fake service and real access control evaluator instead"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G108"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G110"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G201"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G202"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G306"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "401"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "402"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "501"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "404"

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G304" # There's just no way ensuring that files are not created or read using variables will be possible in this project.

[[issues.exclude-rules]]
linters = ["gosec"]
text = "G307"

[[issues.exclude-rules]]
linters = ["misspell"]
text = "Unknwon` is a misspelling of `Unknown"

[[issues.exclude-rules]]
linters = ["errorlint"]
text = "non-wrapping format verb for fmt.Errorf"

# TODO: Enable
[[issues.exclude-rules]]
linters = ["stylecheck"]
text = "ST1000"

# TODO: Enable
[[issues.exclude-rules]]
linters = ["stylecheck"]
text = "ST1020"

# TODO: Enable
[[issues.exclude-rules]]
linters = ["stylecheck"]
text = "ST1021"
